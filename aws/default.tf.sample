#--------------------------------------------------------------
# Create initial terraform resources for a AWS service.
# This modules run locally to create a directory structure.
#--------------------------------------------------------------

#create group with a AWS managed policy attachment
module "iam_managed_policies_groups" {
  source   = "../modules/aws/templates"
  service  = "IAM"
  group    = true
  policies = [
      "Billing",
      "AdministratorAccess",
      "DatabaseAdministrator",
      "SystemAdministrator",
      "NetworkAdministrator"
      "AmazonGlacierReadOnlyAccess",
      "AutoScalingConsoleReadOnlyAccess",
      "AmazonEC2ContainerRegistryReadOnly",
      "AmazonEC2ReadOnlyAccess",
      "AmazonVPCReadOnlyAccess",
      "CloudWatchEventsReadOnlyAccess",
      "ReadOnlyAccess",
      "AmazonSESReadOnlyAccess",
      "AmazonElasticFileSystemReadOnlyAccess",
      "AmazonRoute53ReadOnlyAccess",
      "AmazonDynamoDBReadOnlyAccess",
      "AmazonSNSReadOnlyAccess",
      "AmazonS3ReadOnlyAccess",
      "CloudWatchLogsReadOnlyAccess",
      "AWSCloudTrailReadOnlyAccess",
      "AmazonWorkMailReadOnlyAccess",
      "ResourceGroupsandTagEditorReadOnlyAccess",
      "IAMReadOnlyAccess",
      "AmazonRDSReadOnlyAccess",
      "CloudWatchReadOnlyAccess",
      "ServiceCatalogAdminReadOnlyAccess",
      "AWSCodeCommitReadOnly",
      "AWSDirectoryServiceReadOnlyAccess",
      "AmazonRDSFullAccess",
      "AmazonEC2FullAccess",
      "IAMFullAccess",
      "AutoScalingFullAccess",
      "AmazonEC2ContainerRegistryFullAccess",
      "AmazonS3FullAccess",
      "CloudWatchFullAccess",
      "ServiceCatalogAdminFullAccess",
      "AmazonDynamoDBFullAccess",
      "AWSCloudTrailFullAccess",
      "AutoScalingConsoleFullAccess",
      "AmazonSESFullAccess",
      "CloudWatchLogsFullAccess",
      "AmazonEC2ContainerServiceFullAccess",
      "AmazonVPCFullAccess",
      "ServiceCatalogEndUserFullAccess",
      "AmazonElasticFileSystemFullAccess",
      "ResourceGroupsandTagEditorFullAccess",
      "AmazonGlacierFullAccess",
      "AmazonWorkMailFullAccess",
      "AmazonSNSFullAccess",
      "AmazonRoute53FullAccess",
      "CloudWatchEventsFullAccess",
      "AWSCodeCommitFullAccess",
      "AWSDirectoryServiceFullAccess",
  ]
}

#create AWS managed policy attachment
module "iam_managed_policies" {
  source  = "../modules/aws/templates"
  service = "IAM"
  policies = []
}

#create group with a custom policy attachment
module "iam_custom_groups" {
  source   = "../modules/aws/templates"
  service  = "IAM"
  group    = true
  custom   = true
  policies = ["TerraformBucketReadOnlyAccess"]
}

#create custom policy attachment
module "iam_custom_groups" {
  source   = "../modules/aws/templates"
  service  = "IAM"
  custom   = true
  policies = []
}

#module "storage_s3_templates" {
#  source  = "../modules/aws/templates"
#  service = "S3"
#}
